@page "/"
@page "/books"

@using BookBrowser.Models
@inject NavigationManager Navigation
@inject BookListingService BookService

<PageTitle>Books</PageTitle>

@if (_books == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="grid grid-cols-4 gap-2 space-2">
    @foreach (var b in _books)
    {
        <BookCard Model=@b/>
    }
    </div>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public int Offset { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public int Limit { get; set; } = 20;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        Limit = Math.Min(200, Math.Max(Limit, 20));
        Offset = Math.Max(0, Offset);
        (_count, _books) = await BookService.GetBooks(Offset * Limit, Limit);

    }

    private IEnumerable<Book>? _books;
    private int _count = 0;
}
